/*
 * Semantic.java
 *
 * Created on __DATE__, __TIME__
 */

package syntax;

import java.awt.Button;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStreamReader;

import syntax.Test.System;

/**
 *
 * @author  __USER__
 */
public class Semantic extends javax.swing.JFrame {
	Syntax s;

	/** Creates new form Semantic */
	public Semantic() {
		try {
			initComponents();
			s = new Syntax();
			//s.P();
		} catch (Exception e) {
		}
	}

	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 * @throws Exception 
	 */
	//GEN-BEGIN:initComponents
	// <editor-fold defaultstate="collapsed" desc="Generated Code">
	private void initComponents() {

		jFrame1 = new javax.swing.JFrame();
		textArea1 = new java.awt.TextArea();
		textArea2 = new java.awt.TextArea();
		button1 = new java.awt.Button();
		button2 = new java.awt.Button();
		button3 = new java.awt.Button();

		org.jdesktop.layout.GroupLayout jFrame1Layout = new org.jdesktop.layout.GroupLayout(
				jFrame1.getContentPane());
		jFrame1.getContentPane().setLayout(jFrame1Layout);
		jFrame1Layout.setHorizontalGroup(jFrame1Layout.createParallelGroup(
				org.jdesktop.layout.GroupLayout.LEADING).add(0, 400,
				Short.MAX_VALUE));
		jFrame1Layout.setVerticalGroup(jFrame1Layout.createParallelGroup(
				org.jdesktop.layout.GroupLayout.LEADING).add(0, 300,
				Short.MAX_VALUE));

		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

		button1.setLabel("start");
		button1.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				button1ActionPerformed(evt);
			}
		});

		button2.setLabel("load");
		button2.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				button2ActionPerformed(evt);
			}
		});
		
		button3.setLabel("save");
		button3.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				button3ActionPerformed(evt);
			}
		});
		org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(
				getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout
				.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
				.add(org.jdesktop.layout.GroupLayout.TRAILING,
						layout.createSequentialGroup()
								.add(layout
										.createParallelGroup(
												org.jdesktop.layout.GroupLayout.TRAILING)
										.add(textArea1,
												org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
												400, Short.MAX_VALUE)
										.add(layout
												.createSequentialGroup()
												.addContainerGap(181,
														Short.MAX_VALUE)
												.add(button2,
														org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
														org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
														org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
												.add(41, 41, 41)
												.add(button3,
														org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
														org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
														org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
												.add(41, 41, 41)
												.add(button1,
														org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
														org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
														org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
												.add(50, 50, 50))
												
										.add(textArea2,
												org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
												400, Short.MAX_VALUE))
								.addContainerGap()));
		layout.setVerticalGroup(layout
				.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
				.add(org.jdesktop.layout.GroupLayout.TRAILING,
						layout.createSequentialGroup()
								.addContainerGap()
								.add(textArea1,
										org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
										168, Short.MAX_VALUE)
								.addPreferredGap(
										org.jdesktop.layout.LayoutStyle.RELATED)
								.add(textArea2,
										org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
										128,
										org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
								.addPreferredGap(
										org.jdesktop.layout.LayoutStyle.RELATED)
								.add(layout
										.createParallelGroup(
												org.jdesktop.layout.GroupLayout.LEADING)
										.add(button1,
												org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
												org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
												org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
										.add(button3,
												org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
												org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
												org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
										.add(button2,
												org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
												org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
												org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
								.add(35, 35, 35)));

		pack();
	}// </editor-fold>
	//GEN-END:initComponents

	private void button2ActionPerformed(java.awt.event.ActionEvent evt) {
		try {
			textArea1.setText(null);
			FileInputStream input = new FileInputStream(new File(
					"C:\\Users\\berserker\\Desktop\\compiler\\in.txt"));
			BufferedReader in = new BufferedReader(new InputStreamReader(input));
			String buffer;
			buffer = in.readLine();
			while (buffer != null) {
				textArea1.append(buffer + "\n");
				buffer = in.readLine();
			}
			input.close();
			in.close();
		} catch (Exception e) {
			
		}
		// TODO add your handling code here:
	}

	private void button3ActionPerformed(java.awt.event.ActionEvent evt) {
		try {
			/*textArea1.setText(null);
			FileInputStream input = new FileInputStream(new File(
					"C:\\Users\\berserker\\Desktop\\compiler\\in1.txt"));
			BufferedReader in = new BufferedReader(new InputStreamReader(input));
			String buffer;
			buffer = in.readLine();
			while (buffer != null) {
				textArea1.append(buffer + "\n");
				buffer = in.readLine();
			}
			input.close();
			in.close();*/
			String context = textArea1.getText();
			FileOutputStream out = new FileOutputStream("C:\\Users\\berserker\\Desktop\\compiler\\in.txt", false);
			out.write(context.getBytes());
			out.close();
		} catch (Exception e) {
			
		}
		// TODO add your handling code here:
	}

	
	private void button1ActionPerformed(java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
		try {
			textArea2.setText(null);
			s.WordAnalysis();
			s.P();
			int i = 0;
			for (; i < s.quadList.length; i++) {
				if (s.quadList.a[i].isCase == 'Y')
					textArea2.append(s.quadList.a[i].no + " "
							+ s.quadList.a[i].symbol + " " + s.quadList.a[i].f1
							+ " " + s.quadList.a[i].f2 + " "
							+ s.quadList.a[i].jump + "   "
							+ s.quadList.a[i].isCase + "\n");
				else
					textArea2.append(s.quadList.a[i].no + " "
							+ s.quadList.a[i].symbol + " " + s.quadList.a[i].f1
							+ " " + s.quadList.a[i].f2 + " "
							+ s.quadList.a[i].f3 + "   "
							+ s.quadList.a[i].isCase + "\n");

			}
		} catch (Exception e) {

		}
	}

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new Semantic().setVisible(true);
			}
		});
	}

	//GEN-BEGIN:variables
	// Variables declaration - do not modify
	private java.awt.Button button1;
	private java.awt.Button button2;
	private java.awt.Button button3;
	private javax.swing.JFrame jFrame1;
	private java.awt.TextArea textArea1;
	private java.awt.TextArea textArea2;
	// End of variables declaration//GEN-END:variables

}